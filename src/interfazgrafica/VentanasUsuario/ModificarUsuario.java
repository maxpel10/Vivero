package interfazgrafica.VentanasUsuario;

import interfazgrafica.ClasesBase.Cliente;
import interfazgrafica.ClasesBase.Dueño;
import interfazgrafica.ClasesBase.Empleado;
import interfazgrafica.ClasesBase.Usuario;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.Iterator;
import java.util.List;
import java.util.Locale;
import java.util.Set;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class ModificarUsuario extends javax.swing.JFrame {
    /**
     *  Set con todos los usuarios registrados
     */
    private Set<Usuario> setUsuarios;
    /**
     *  Set con todos los clientes registrados
     */
    private Set<Cliente> setClientes;
    /**
     *  Modelo de la tabla donde se muestran los usuarios
     */
    private DefaultTableModel model;
    /**
     * Variable usada para modificar un usuario elegido.
     */
    private Usuario elUsuario;
    /**
     * Variable usada para almacenar el usuario que esta iniciado sesion.
     */
    private Usuario usuarioIngresadoSesion;
    /**
     * jFrame Padre
     */
    private MenuPrincipal padre;
    /**
     * Creates new form ModificarUsuario
     */
    public ModificarUsuario() {
        initComponents();
    }
    /**
     * Modifica un usuario existente en el registro de usuarios.
     * @param setUsuarios set de Usuario, contiene todos los usuarios del programa
     * @param mp Menu Principal, jFrame padre de esta ventana
     */
    ModificarUsuario(Set<Usuario> setUsuarios,Set<Cliente> setClientes,Usuario usuarioIngresadoSesion,MenuPrincipal mp) {
        initComponents();
        this.setUsuarios = setUsuarios;
        this.setClientes = setClientes;
        padre = mp;
        model = (DefaultTableModel) jTableUsuarios.getModel();
        this.usuarioIngresadoSesion = usuarioIngresadoSesion;
        this.addWindowListener(new WindowAdapter(){
            @Override
            public void windowClosing(WindowEvent e){
                padre.setEnabled(true);
                dispose();
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelFondo = new javax.swing.JPanel();
        jPanelTabla = new javax.swing.JPanel();
        jLabelBuscar = new javax.swing.JLabel();
        jTextFieldBuscar = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableUsuarios = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jTextFieldApellido = new javax.swing.JTextField();
        jTextFieldNombre = new javax.swing.JTextField();
        jTextFieldDNI = new javax.swing.JTextField();
        jTextFieldMovil = new javax.swing.JTextField();
        jTextFieldFijo = new javax.swing.JTextField();
        jTextFieldUsuario = new javax.swing.JTextField();
        jPasswordFieldContrasena = new javax.swing.JPasswordField();
        jPasswordFieldConfiContrasena = new javax.swing.JPasswordField();
        jLabel9 = new javax.swing.JLabel();
        jLabelSueldo = new javax.swing.JLabel();
        jTextFieldSueldo = new javax.swing.JTextField();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jLabelAntiguedad = new javax.swing.JLabel();
        jSpinner = new javax.swing.JSpinner();
        jButtonModificar = new javax.swing.JButton();
        jButtonEliminar = new javax.swing.JButton();
        jButtonCancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Modificar/Eliminar usuarios");
        setMinimumSize(new java.awt.Dimension(880, 650));
        setResizable(false);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        jPanelFondo.setBackground(new java.awt.Color(204, 255, 204));
        jPanelFondo.setPreferredSize(new java.awt.Dimension(659, 670));

        jPanelTabla.setBackground(new java.awt.Color(204, 255, 204));

        jLabelBuscar.setFont(new java.awt.Font("Microsoft YaHei Light", 0, 12)); // NOI18N
        jLabelBuscar.setText("Ingrese el apellido del usuario a buscar:");

        jTextFieldBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldBuscarKeyTyped(evt);
            }
        });

        jTableUsuarios.setFont(new java.awt.Font("Microsoft YaHei Light", 0, 12)); // NOI18N
        jTableUsuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Apellido", "Nombre", "DNI", "Usuario"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableUsuarios.getTableHeader().setReorderingAllowed(false);
        jTableUsuarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableUsuariosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableUsuarios);

        jLabel10.setFont(new java.awt.Font("Microsoft YaHei Light", 0, 12)); // NOI18N
        jLabel10.setText("Usuarios");

        javax.swing.GroupLayout jPanelTablaLayout = new javax.swing.GroupLayout(jPanelTabla);
        jPanelTabla.setLayout(jPanelTablaLayout);
        jPanelTablaLayout.setHorizontalGroup(
            jPanelTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelTablaLayout.createSequentialGroup()
                .addContainerGap(74, Short.MAX_VALUE)
                .addGroup(jPanelTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(jLabelBuscar)
                    .addComponent(jTextFieldBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 725, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanelTablaLayout.setVerticalGroup(
            jPanelTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelTablaLayout.createSequentialGroup()
                .addComponent(jLabelBuscar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTextFieldBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65))
        );

        jPanel1.setBackground(new java.awt.Color(204, 255, 204));

        jLabel2.setFont(new java.awt.Font("Microsoft YaHei Light", 0, 12)); // NOI18N
        jLabel2.setText("Nombre");

        jLabel3.setFont(new java.awt.Font("Microsoft YaHei Light", 0, 12)); // NOI18N
        jLabel3.setText("Apellido");

        jLabel4.setFont(new java.awt.Font("Microsoft YaHei Light", 0, 12)); // NOI18N
        jLabel4.setText("DNI");

        jLabel5.setFont(new java.awt.Font("Microsoft YaHei Light", 0, 12)); // NOI18N
        jLabel5.setText("Telefono movil");

        jLabel1.setFont(new java.awt.Font("Microsoft YaHei Light", 0, 12)); // NOI18N
        jLabel1.setText("Teléfono fijo");

        jLabel6.setFont(new java.awt.Font("Microsoft YaHei Light", 0, 12)); // NOI18N
        jLabel6.setText("Fecha de nacimiento");

        jLabel7.setFont(new java.awt.Font("Microsoft YaHei Light", 0, 12)); // NOI18N
        jLabel7.setText("Usuario");

        jLabel8.setFont(new java.awt.Font("Microsoft YaHei Light", 0, 12)); // NOI18N
        jLabel8.setText("Contraseña");

        jLabel9.setFont(new java.awt.Font("Microsoft YaHei Light", 0, 12)); // NOI18N
        jLabel9.setText("Confirmar Contraseña");

        jLabelSueldo.setText("Sueldo");
        jLabelSueldo.setEnabled(false);

        jTextFieldSueldo.setEnabled(false);

        jLabelAntiguedad.setFont(new java.awt.Font("Microsoft YaHei Light", 0, 12)); // NOI18N
        jLabelAntiguedad.setText("Antiguedad");
        jLabelAntiguedad.setEnabled(false);

        jSpinner.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        jSpinner.setEnabled(false);

        jButtonModificar.setBackground(new java.awt.Color(255, 255, 255));
        jButtonModificar.setFont(new java.awt.Font("Microsoft YaHei Light", 0, 12)); // NOI18N
        jButtonModificar.setText("Modificar");
        jButtonModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModificarActionPerformed(evt);
            }
        });

        jButtonEliminar.setBackground(new java.awt.Color(255, 255, 255));
        jButtonEliminar.setFont(new java.awt.Font("Microsoft YaHei Light", 0, 12)); // NOI18N
        jButtonEliminar.setText("Eliminar");
        jButtonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEliminarActionPerformed(evt);
            }
        });

        jButtonCancelar.setBackground(new java.awt.Color(255, 255, 255));
        jButtonCancelar.setFont(new java.awt.Font("Microsoft YaHei Light", 0, 12)); // NOI18N
        jButtonCancelar.setText("Cancelar");
        jButtonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jTextFieldNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel6))
                                .addGap(48, 48, 48)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextFieldApellido)
                                    .addComponent(jTextFieldDNI)
                                    .addComponent(jTextFieldMovil)
                                    .addComponent(jTextFieldFijo)
                                    .addComponent(jDateChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE))))
                        .addGap(77, 77, 77)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel8))
                                .addGap(93, 93, 93)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jPasswordFieldContrasena, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabelSueldo)
                                    .addComponent(jLabelAntiguedad))
                                .addGap(34, 34, 34)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldSueldo, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jPasswordFieldConfiContrasena, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(203, 203, 203)
                        .addComponent(jButtonModificar)
                        .addGap(81, 81, 81)
                        .addComponent(jButtonEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(81, 81, 81)
                        .addComponent(jButtonCancelar)))
                .addContainerGap(44, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextFieldNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(jTextFieldUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel8)
                    .addComponent(jPasswordFieldContrasena, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldDNI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel9)
                    .addComponent(jPasswordFieldConfiContrasena, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldMovil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jLabelSueldo)
                    .addComponent(jTextFieldSueldo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldFijo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabelAntiguedad)
                    .addComponent(jSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(51, 51, 51)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonModificar)
                    .addComponent(jButtonEliminar)
                    .addComponent(jButtonCancelar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanelFondoLayout = new javax.swing.GroupLayout(jPanelFondo);
        jPanelFondo.setLayout(jPanelFondoLayout);
        jPanelFondoLayout.setHorizontalGroup(
            jPanelFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelFondoLayout.createSequentialGroup()
                .addGroup(jPanelFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelTabla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelFondoLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(208, 208, 208))
        );
        jPanelFondoLayout.setVerticalGroup(
            jPanelFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelFondoLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jPanelTabla, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(132, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanelFondo, javax.swing.GroupLayout.PREFERRED_SIZE, 880, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelFondo, javax.swing.GroupLayout.PREFERRED_SIZE, 650, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldBuscarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldBuscarKeyTyped
        model.setRowCount(0);
        String buscado = jTextFieldBuscar.getText();
        buscado = buscado.toUpperCase();
        Iterator i;
        i = setUsuarios.iterator();
        while(i.hasNext()){
            Usuario user = (Usuario) i.next();
            String usereado = user.getApellido();
            usereado = usereado.toUpperCase();
            if(usereado.contains(buscado)){
                model.addRow(new Object[]{user.getApellido(),user.getNombre(),user.getDni(),user.getUsuario()});
            }
        }
        
        /*}
        });*/
    }//GEN-LAST:event_jTextFieldBuscarKeyTyped

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        model.setRowCount(0);
        Iterator i;
        i = setUsuarios.iterator();
        while(i.hasNext()){
            Usuario user = (Usuario) i.next();
                model.addRow(new Object[]{user.getApellido(),user.getNombre(),user.getDni(),user.getUsuario()});
        }
        jTextFieldApellido.setText("");
        jTextFieldNombre.setText("");
        jTextFieldDNI.setText("");
        jTextFieldFijo.setText("");
        jTextFieldMovil.setText("");
        jTextFieldUsuario.setText("");
        jPasswordFieldContrasena.setText("");
        jPasswordFieldConfiContrasena.setText("");
        jDateChooser1.setCalendar(null);
        elUsuario = null;
    }//GEN-LAST:event_formComponentShown

    private void jTableUsuariosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableUsuariosMouseClicked
        jTextFieldSueldo.setEnabled(false);
        jTextFieldSueldo.setText("");
        jLabelSueldo.setEnabled(false);
        jSpinner.setEnabled(false);
        jSpinner.setValue(0);
        jLabelAntiguedad.setEnabled(false);
        Iterator i;
        String cod = String.valueOf(model.getValueAt(jTableUsuarios.getSelectedRow(),2));
        int dni = Integer.parseInt(cod);
        i = setUsuarios.iterator();
        while(i.hasNext()){
            Usuario user = (Usuario) i.next();
            if(dni == user.getDni()){
                jTextFieldApellido.setText(user.getApellido());
                jTextFieldNombre.setText(user.getNombre());
                jTextFieldDNI.setText(String.valueOf(user.getDni()));
                jTextFieldFijo.setText(String.valueOf(user.getTelefonoFijo()));
                jTextFieldMovil.setText(String.valueOf(user.getTelefonoMovil()));
                jTextFieldUsuario.setText(user.getUsuario());
                jPasswordFieldContrasena.setText(user.getContrasenia());
                jPasswordFieldConfiContrasena.setText(user.getContrasenia());
                String fechaDeNacimiento = user.getFechaDeNacimiento();
                String[] fechArray = fechaDeNacimiento.split("/");
                int dia = Integer.valueOf(fechArray[0]);
                int mes = Integer.valueOf(fechArray[1]) - 1;
                int anio = Integer.valueOf(fechArray[2]);
                Calendar fecha = new GregorianCalendar();
                fecha.set(anio,mes,dia);
                jDateChooser1.setCalendar(fecha);
                if(user instanceof Empleado){
                    Empleado emp = (Empleado) user;
                    jTextFieldSueldo.setEnabled(true);
                    jTextFieldSueldo.setText(String.valueOf(emp.getSueldo()));
                    jLabelSueldo.setEnabled(true);
                    jSpinner.setEnabled(true);
                    jSpinner.setValue(emp.getAntiguedad());
                    jLabelAntiguedad.setEnabled(true);
                }
                elUsuario = user;
            }
        }
    }//GEN-LAST:event_jTableUsuariosMouseClicked
    /**
     * Actualiza los datos de un usuario elegido previamente
     * @param evt 
     */
    private void jButtonModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModificarActionPerformed
        try{
            String contrasenia = new String(jPasswordFieldContrasena.getPassword());
            String confiContrasenia = new String(jPasswordFieldConfiContrasena.getPassword());
            String fechaDeNacimiento = "";
            int antiguedad = (int)jSpinner.getValue();
            int dni = 0;
            long movil;
            long fijo;
            double sueldo = 0;
            boolean estaBien = true;
            elUsuario.getNombre();//Fuerzo la excepcion si no hay nada seleccionado
            
            
            if(contrasenia.equals("")||confiContrasenia.equals("")||jTextFieldApellido.getText().equals("")||jTextFieldNombre.getText().equals("")||jTextFieldDNI.getText().equals("")||jTextFieldUsuario.getText().equals("")||jTextFieldFijo.getText().equals("")||jTextFieldMovil.getText().equals("")){
                if(elUsuario instanceof Empleado && jTextFieldSueldo.getText().equals("")){
                    JOptionPane.showMessageDialog(null,"Algunos campos no se han completado. Intente nuevamente.","Advertencia",JOptionPane.WARNING_MESSAGE);
                    estaBien = false;
                }
                
                if(elUsuario instanceof Dueño){
                    JOptionPane.showMessageDialog(null,"Algunos campos no se han completado. Intente nuevamente.","Advertencia",JOptionPane.WARNING_MESSAGE);
                    estaBien = false;
                }
            }

            if(estaBien){
                String nombre = jTextFieldNombre.getText();
                String regex = "^[a-zA-Z][a-zA-Z\\s]*$";
                Pattern pattern = Pattern.compile(regex);
                Matcher matcher = pattern.matcher(nombre);
                if (!matcher.matches()){
                    JOptionPane.showMessageDialog(null,"El formato del nombre es incorrecto. No puede comenzar con un espacio, contener numeros ni caracteres especiales (incluye tildes). Intente nuevamente","Advertencia",JOptionPane.WARNING_MESSAGE);
                    estaBien = false;
                }
            }

            if(estaBien){
                String apellido = jTextFieldApellido.getText();
                String regex = "^[a-zA-Z][a-zA-Z\\s]*$";
                Pattern pattern = Pattern.compile(regex);
                Matcher matcher = pattern.matcher(apellido);
                if (!matcher.matches()){
                    JOptionPane.showMessageDialog(null,"El formato del apellido es incorrecto. No puede comenzar con un espacio, contener numeros ni caracteres especiales (incluye tildes). Intente nuevamente","Advertencia",JOptionPane.WARNING_MESSAGE);
                    estaBien = false;
                }
            }

            if(estaBien){
                try{
                    dni = Integer.parseInt(jTextFieldDNI.getText());
                }
                catch(NumberFormatException nfe){
                    JOptionPane.showMessageDialog(null,"El DNI debe contener solo numeros. Intente nuevamente.","Advertencia",JOptionPane.WARNING_MESSAGE);
                    estaBien = false;
                }
            }

            if(estaBien){
                if(dni>99999999||dni<1000000){
                    JOptionPane.showMessageDialog(null,"El DNI ingresado no existe. Intente nuevamente","Advertencia",JOptionPane.WARNING_MESSAGE);
                    estaBien=false;
                }
            }

            if(estaBien){
                Iterator i = setUsuarios.iterator();
                while(i.hasNext()){
                    Usuario u = (Usuario) i.next();
                    if(u.getDni() == dni && u != elUsuario){
                        JOptionPane.showMessageDialog(null,"Ya existe un usuario cargado con ese DNI. Intente nuevamente","Advertencia",JOptionPane.WARNING_MESSAGE);
                        estaBien = false;
                        break;
                    }
                }
            }

            if(estaBien){
                if(jDateChooser1.getDate() == null){
                    JOptionPane.showMessageDialog(null,"El formato de la fecha es incorrecto. Intente nuevamente.","Advertencia",JOptionPane.WARNING_MESSAGE);
                    estaBien = false;
                }
            }

            if(estaBien){
                Calendar fecha = new GregorianCalendar();
                fecha.set(2000,11,31);
                if(jDateChooser1.getCalendar().after(fecha)){
                    JOptionPane.showMessageDialog(null,"La fecha de nacimiento debe ser anterior al año 2000. Intente nuevamente.","Advertencia",JOptionPane.WARNING_MESSAGE);
                    estaBien = false;
                }
                else
                    fechaDeNacimiento = jDateChooser1.getCalendar().get(Calendar.DATE)+"/"+(jDateChooser1.getCalendar().get(Calendar.MONTH)+1)+"/"+jDateChooser1.getCalendar().get(Calendar.YEAR);
            }
            
            if(estaBien){
                Calendar fecha = new GregorianCalendar();
                fecha.set(1899,11,31);
                if(jDateChooser1.getCalendar().before(fecha)){
                    JOptionPane.showMessageDialog(null,"La fecha de nacimiento debe ser posterior al año 1900. Intente nuevamente.","Advertencia",JOptionPane.WARNING_MESSAGE);
                    estaBien = false;
                }
            }

            if(estaBien){
                try{
                    movil = Long.parseLong(jTextFieldMovil.getText());
                }
                catch(NumberFormatException nfe){
                    JOptionPane.showMessageDialog(null,"El telefono movil solo puede contener numeros. Intente nuevamente.","Advertencia",JOptionPane.WARNING_MESSAGE);
                    estaBien = false;
                }
            }

            if(estaBien){
                try{
                    fijo = Long.parseLong(jTextFieldFijo.getText());
                }
                catch(NumberFormatException nfe){
                    JOptionPane.showMessageDialog(null,"El telefono fijo solo puede contener numeros. Intente nuevamente.","Advertencia",JOptionPane.WARNING_MESSAGE);
                    estaBien = false;
                }
            }

            if(estaBien){
                Iterator i = setUsuarios.iterator();
                while(i.hasNext()){
                    Usuario u = (Usuario) i.next();
                    if(u.getUsuario().equals(jTextFieldUsuario.getText())&& u != elUsuario){
                        JOptionPane.showMessageDialog(null,"El usuario ingresado ya existe. Intente nuevamente","Advertencia",JOptionPane.WARNING_MESSAGE);
                        estaBien=false;
                        break;
                    }
                }
            }

            if(estaBien){
                Iterator i = setClientes.iterator();
                while(i.hasNext()){
                    Cliente c = (Cliente) i.next();
                    if(c.getUsuario().equals(jTextFieldUsuario.getText())){
                        JOptionPane.showMessageDialog(null,"El usuario ingresado ya existe. Intente nuevamente","Advertencia",JOptionPane.WARNING_MESSAGE);
                        estaBien=false;
                        break;
                    }
                }
            }
            
            if(estaBien && elUsuario instanceof Empleado){
                try{
                    sueldo = Float.parseFloat(jTextFieldSueldo.getText());
                }
                catch(NumberFormatException nfe){
                    JOptionPane.showMessageDialog(null,"El sueldo puede contener solo numeros y un punto. Intente nuevamente.","Advertencia",JOptionPane.WARNING_MESSAGE);
                    estaBien = false;
                }
                
               if(estaBien){
                   if(sueldo<=0){
                       JOptionPane.showMessageDialog(null,"El sueldo debe ser positivo. Intente nuevamente","Advertencia",JOptionPane.WARNING_MESSAGE);
                       estaBien=false;
                   }
                }
            }

            if(estaBien){
                if(jTextFieldUsuario.getText().length()<6){
                    JOptionPane.showMessageDialog(null,"El usuario debe tener al menos 6 caracteres. Intente nuevamente","Advertencia",JOptionPane.WARNING_MESSAGE);
                    estaBien=false;
                }
            }
            
            if(estaBien){
                if(!contrasenia.equals(confiContrasenia)){
                    JOptionPane.showMessageDialog(null,"Las contraseñas ingresadas no coinciden. Intente nuevamente","Advertencia",JOptionPane.WARNING_MESSAGE);
                    estaBien=false;
                }
            }
            
            if(estaBien){
                if(contrasenia.length()<6){
                    JOptionPane.showMessageDialog(null,"La contraseña debe tener al menos 6 caracteres. Intente nuevamente","Advertencia",JOptionPane.WARNING_MESSAGE);
                    estaBien=false;
                }
            }
            
            if(estaBien){
                if(fechaDeNacimiento.equals(elUsuario.getFechaDeNacimiento()) && contrasenia.equals(elUsuario.getContrasenia())&&confiContrasenia.equals(elUsuario.getContrasenia())&&jTextFieldApellido.getText().equals(elUsuario.getApellido())&&jTextFieldNombre.getText().equals(elUsuario.getNombre())&&jTextFieldDNI.getText().equals(String.valueOf(elUsuario.getDni()))&&jTextFieldUsuario.getText().equals(elUsuario.getUsuario())&&jTextFieldFijo.getText().equals(String.valueOf(elUsuario.getTelefonoFijo()))&&jTextFieldMovil.getText().equals(String.valueOf(elUsuario.getTelefonoMovil()))){
                    if(elUsuario instanceof Empleado){
                        Empleado e = (Empleado) elUsuario;
                        if(e.getSueldo() == sueldo && e.getAntiguedad() == (int) jSpinner.getValue()){
                            JOptionPane.showMessageDialog(null,"No modifico ningun dato. Intente nuevamente","Advertencia",JOptionPane.WARNING_MESSAGE);
                            estaBien = false; 
                        }
                    }
                    else{
                        JOptionPane.showMessageDialog(null,"No modifico ningun dato. Intente nuevamente","Advertencia",JOptionPane.WARNING_MESSAGE);
                        estaBien = false; 
                    }
                }
            }
            
            if(estaBien){
                elUsuario.setNombre(jTextFieldNombre.getText());
                elUsuario.setApellido(jTextFieldApellido.getText());
                elUsuario.setDni(Integer.parseInt(jTextFieldDNI.getText()));
                elUsuario.setTelefonoFijo(Long.parseLong(jTextFieldFijo.getText()));
                elUsuario.setTelefonoMovil(Long.parseLong(jTextFieldMovil.getText()));
                elUsuario.setFechaDeNacimiento(fechaDeNacimiento);
                elUsuario.setUsuario(jTextFieldUsuario.getText());
                elUsuario.setContrasenia(contrasenia);
                JOptionPane.showMessageDialog(null,"Datos del usuario modificados.","Informacion",JOptionPane.INFORMATION_MESSAGE);
                if(elUsuario instanceof Empleado){
                    Empleado e = (Empleado) elUsuario;
                    e.setSueldo(sueldo);
                    e.setAntiguedad((int)jSpinner.getValue());
                }
                elUsuario = null;
                this.setVisible(false);
                padre.setVisible(false);
                padre.setVisible(true);
                this.setVisible(true);
            }
            
        }
        catch(NullPointerException npe){
            JOptionPane.showMessageDialog(null,"Debe haber un usuario seleccionado","Advertencia",JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jButtonModificarActionPerformed
    /**
     * Elimina un usuario elegido previamente
     * @param evt 
     */
    private void jButtonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEliminarActionPerformed
        try{
            elUsuario.getApellido();//Fuerzo la excepcion
            if(elUsuario == usuarioIngresadoSesion)
                JOptionPane.showMessageDialog(null, "No se puede eliminar a si mismo.","Informacion",JOptionPane.INFORMATION_MESSAGE);
            else{
                int reply = JOptionPane.showConfirmDialog(null, "¿Está seguro que quiere eliminar el usuario?","Confirmar",JOptionPane.YES_NO_OPTION);
                if(reply==JOptionPane.YES_OPTION){
                    setUsuarios.remove(elUsuario);
                    JOptionPane.showMessageDialog(null, "El usuario se eliminó correctamente","Información",JOptionPane.INFORMATION_MESSAGE);
                    this.setVisible(false);
                    padre.setVisible(true);
                    this.setVisible(true);
                }
            }
        }
        catch(NullPointerException npe){
            JOptionPane.showMessageDialog(null,"Debe haber un usuario seleccionado","Advertencia",JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jButtonEliminarActionPerformed
    /**
     * Regresa al menu principal sin hacer cambios
     * @param evt 
     */
    private void jButtonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarActionPerformed
        padre.setEnabled(true);
        this.dispose();
    }//GEN-LAST:event_jButtonCancelarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ModificarUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ModificarUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ModificarUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ModificarUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ModificarUsuario().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCancelar;
    private javax.swing.JButton jButtonEliminar;
    private javax.swing.JButton jButtonModificar;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelAntiguedad;
    private javax.swing.JLabel jLabelBuscar;
    private javax.swing.JLabel jLabelSueldo;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelFondo;
    private javax.swing.JPanel jPanelTabla;
    private javax.swing.JPasswordField jPasswordFieldConfiContrasena;
    private javax.swing.JPasswordField jPasswordFieldContrasena;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner jSpinner;
    private javax.swing.JTable jTableUsuarios;
    private javax.swing.JTextField jTextFieldApellido;
    private javax.swing.JTextField jTextFieldBuscar;
    private javax.swing.JTextField jTextFieldDNI;
    private javax.swing.JTextField jTextFieldFijo;
    private javax.swing.JTextField jTextFieldMovil;
    private javax.swing.JTextField jTextFieldNombre;
    private javax.swing.JTextField jTextFieldSueldo;
    private javax.swing.JTextField jTextFieldUsuario;
    // End of variables declaration//GEN-END:variables
}
